{
    "openapi": "3.0.0",
    "info": {
        "title": "Midia API",
        "description": "API for managing midia, categories, genres, users, sessions, and comments.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/midias_api",
            "description": "Main server"
        },
        {
            "url": "http://localhost/midias_api",
            "description": "Localhost server"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Gathers endpoints to Authentication."
        },
        {
            "name": "Users",
            "description": "Gathers endpoints to handle Users."
        },
        {
            "name": "Midias",
            "description": "Gathers endpoints to handle Midias."
        },
        {
            "name": "Sessions",
            "description": "Gathers endpoints to handle Sessions."
        },
        {
            "name": "Comments",
            "description": "Gathers endpoints to handle Comments."
        },
        {
            "name": "User Midia",
            "description": "Gathers endpoints to handle User Midia."
        },
        {
            "name": "Genres",
            "description": "Gathers endpoints to handle Genres."
        },
        {
            "name": "Categories",
            "description": "Gathers endpoints to handle Categories."
        },
        {
            "name": "Completions",
            "description": "Gathers endpoints to handle Completions."
        }
    ],
    "paths": {
        "/token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Creates a Token",
                "description": "Returns a token passing client_id and client_secret.",
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "client_id": {
                                        "type": "string",
                                        "example": "72e2653fd1073255d127dd93025f6149",
                                        "description": "client_id of the Aplication."
                                    },
                                    "client_secret": {
                                        "type": "string",
                                        "example": "b0e8d76a579e2cce1f97acdf562b937faef6aa3d12b722d81f017934f26c7f5d",
                                        "description": "client_secret of the Aplication."
                                    },
                                    "grant_type": {
                                        "type": "string",
                                        "example": "client_credentials",
                                        "description": "grant_type of the Aplication."
                                    }
                                },
                                "required": [
                                    "client_id",
                                    "client_secret"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "token created"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJkYWU3ZDk5MWRkZjNlYjUzNmU0ODg1YTdjMDk3N2U0OSIsImNsaWVudF9zZWNyZXQiOiI1YjE1Mzk0YjYyOTljMDQ5MWQwODIwMzlhMGRmY2EyNWIyNTk3NGIwOTExNTZkNGFmNzg1MWU4NTRmNWZlZDFhIn0=.jsv58JAsl5xR7kVIAFb35OtkI8RFhn1jfx3tJrKZlks="
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or missing credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 401
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "{field} is required | invalid credentials"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "417": {
                        "description": "Error occurred during Token creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 417
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 417
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "error on creation"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/completions": {
            "get": {
                "tags": [
                    "Completions"
                ],
                "summary": "List Completions",
                "description": "Returns a list of Completions.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "order",
                                "id",
                                "description",
                                "created",
                                "updated"
                            ]
                        },
                        "description": "Order field(order if null)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Completions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/completion"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/completions/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the Completion."
                }
            ],
            "get": {
                "tags": [
                    "Completions"
                ],
                "summary": "Get Completion details",
                "description": "Retrieve the details of a specific Completion by its ID.",
                "responses": {
                    "200": {
                        "description": "Completion details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/completion"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List Categories",
                "description": "Returns a list of Categories.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "description",
                                "id",
                                "created",
                                "updated"
                            ]
                        },
                        "description": "Order field(description if null)"
                    },
                    {
                        "name": "midias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Midias from Category"
                    },
                    {
                        "name": "genres",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Genres from Category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/category"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/categories/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the Category."
                }
            ],
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get Category details",
                "description": "Retrieve the details of a specific Category by its ID.",
                "parameters": [
                    {
                        "name": "midias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Midia related to the Category."
                    },
                    {
                        "name": "genres",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Genres related to the Category."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/category"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/genres": {
            "get": {
                "tags": [
                    "Genres"
                ],
                "summary": "List Genres",
                "description": "Returns a list of Genres.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "description",
                                "category",
                                "id",
                                "id_category",
                                "created",
                                "updated"
                            ]
                        },
                        "description": "Order field(description if null)"
                    },
                    {
                        "name": "midias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Midias from Genre"
                    },
                    {
                        "name": "id_category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null
                        },
                        "description": "filter by id_category"
                    },
                    {
                        "name": "id_midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null
                        },
                        "description": "filter by id_midia"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by description"
                    },
                    {
                        "name": "description_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by description including value"
                    },
                    {
                        "name": "category_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Category including value"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Genres",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/genre"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/genres/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the Genre."
                }
            ],
            "get": {
                "tags": [
                    "Genres"
                ],
                "summary": "Get Genre details",
                "description": "Retrieve the details of a specific Genre by its ID.",
                "parameters": [
                    {
                        "name": "midias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Midia related to the Genre."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Genre details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/genre"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List Users",
                "description": "Returns a list of Users.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "name",
                                "status",
                                "id",
                                "created",
                                "updated"
                            ]
                        },
                        "description": "Order field(name if null)"
                    },
                    {
                        "name": "midias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Midias from User"
                    },
                    {
                        "name": "sessions",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Sessions from User"
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Comments from User"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by name"
                    },
                    {
                        "name": "name_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by name including value"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by status"
                    },
                    {
                        "name": "status_in",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by more than one status"
                    },
                    {
                        "name": "status_notin",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by status different from value"
                    },
                    {
                        "name": "id_not_in",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by id different from value"
                    },
                    {
                        "name": "id_midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null
                        },
                        "description": "filter by id_midia"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/user"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new User",
                "description": "Creates a new User with the provided details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe",
                                        "description": "Name of the User."
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "abc123",
                                        "description": "Password for the User."
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "user inserted"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "user": {
                                                    "$ref": "#components/schemas/user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_user"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during User creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_insert"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the User."
                }
            ],
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User details",
                "description": "Retrieve the details of a specific User by their ID.",
                "parameters": [
                    {
                        "name": "midias",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Midia related to the User."
                    },
                    {
                        "name": "sessions",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Sessions related to the User."
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Comments made by the User."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "description": "Update User by their ID.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe",
                                        "description": "Name of the User."
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "created",
                                        "enum": [
                                            "created",
                                            "active",
                                            "inactive",
                                            "suspended",
                                            "deleted"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "status"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "user updated"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user": {
                                                    "$ref": "#components/schemas/user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_user"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during User update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_update"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a User",
                "description": "Deletes a specific User by their ID.",
                "responses": {
                    "200": {
                        "description": "User deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "user deleted"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during deletion.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_delete"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/midias": {
            "get": {
                "tags": [
                    "Midias"
                ],
                "summary": "List Midias",
                "description": "Returns a list of Midias.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "title",
                                "release",
                                "category",
                                "description",
                                "id",
                                "id_category",
                                "created",
                                "updated"
                            ]
                        },
                        "description": "Order field(title if null)"
                    },
                    {
                        "name": "genres",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Genres from Midia"
                    },
                    {
                        "name": "users",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Users from Midia"
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Comments from Midia"
                    },
                    {
                        "name": "id_category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_category"
                    },
                    {
                        "name": "id_main_midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_main_midia"
                    },
                    {
                        "name": "id_genre",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_genre"
                    },
                    {
                        "name": "id_user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_user"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by title"
                    },
                    {
                        "name": "title_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by title including value"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by description"
                    },
                    {
                        "name": "description_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by description including value"
                    },
                    {
                        "name": "category_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Category including value"
                    },
                    {
                        "name": "release_year",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by release_year"
                    },
                    {
                        "name": "release_month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by release_month"
                    },
                    {
                        "name": "release_day",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by release_day"
                    },
                    {
                        "name": "id_main_midia_null",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": null
                        },
                        "description": "filter by id_main_midia null"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Midias",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/midia"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Midias"
                ],
                "summary": "Create a new Midia",
                "description": "Creates a new Midia with the provided details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "The Matrix",
                                        "description": "Title of the Midia."
                                    },
                                    "id_category": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Category of the Midia."
                                    },
                                    "id_main_midia": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Main Midia for a sub-midia."
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Enter The Matrix",
                                        "description": "Description of the Midia."
                                    },
                                    "release_year": {
                                        "type": "string",
                                        "example": "1999",
                                        "format": "yyyy",
                                        "description": "Release Year of the Midia."
                                    },
                                    "release_month": {
                                        "type": "string",
                                        "example": "1999",
                                        "format": "mm",
                                        "description": "Release Month of the Midia."
                                    },
                                    "release_day": {
                                        "type": "string",
                                        "example": "1999",
                                        "format": "mm",
                                        "description": "Release Day of the Midia."
                                    }
                                },
                                "required": [
                                    "title",
                                    "id_category"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Midia created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "midia inserted"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "midia": {
                                                    "$ref": "#components/schemas/midia"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Midia creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_insert"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/midias/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the Midia."
                }
            ],
            "get": {
                "tags": [
                    "Midias"
                ],
                "summary": "Get Midia details",
                "description": "Retrieve the details of a specific Midia by its ID.",
                "parameters": [
                    {
                        "name": "genres",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Genres related to the Midia."
                    },
                    {
                        "name": "users",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Users related to the Midia."
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Include Comments related to the Midia."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Midia details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/midia"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Midias"
                ],
                "summary": "Update Midia",
                "description": "Update Midia by their ID.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "The Matrix",
                                        "description": "Title of the Midia."
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Enter The Matrix",
                                        "description": "Description of the Midia."
                                    },
                                    "release_year": {
                                        "type": "string",
                                        "example": "1999",
                                        "format": "yyyy",
                                        "description": "Release Year of the Midia."
                                    },
                                    "release_month": {
                                        "type": "string",
                                        "example": "1999",
                                        "format": "mm",
                                        "description": "Release Month of the Midia."
                                    },
                                    "release_day": {
                                        "type": "string",
                                        "example": "1999",
                                        "format": "mm",
                                        "description": "Release Day of the Midia."
                                    }
                                },
                                "required": [
                                    "title"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Midia updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "midia updated"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "midia": {
                                                    "$ref": "#components/schemas/midia"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Midia update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_update"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Midias"
                ],
                "summary": "Delete a Midia",
                "description": "Deletes a specific Midia by their ID.",
                "responses": {
                    "200": {
                        "description": "Midia deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "midia deleted"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during deletion.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_delete"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/midias/{id_midia}/genres": {
            "parameters": [
                {
                    "name": "id_midia",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "example": 1
                    },
                    "description": "Unique identifier of the Midia."
                }
            ],
            "post": {
                "tags": [
                    "Midias"
                ],
                "summary": "Add a new Genre to a Midia",
                "description": "Adds a new Genre to a Midia by their IDs with the provided details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_genre": {
                                        "type": "integer",
                                        "example": 2,
                                        "description": "Id from Genre."
                                    },
                                    "main": {
                                        "type": "string",
                                        "example": "true",
                                        "enum": [
                                            null,
                                            "true",
                                            "false"
                                        ],
                                        "description": "Indicates if is the main Genre of the Midia."
                                    }
                                },
                                "required": [
                                    "id_genre"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Genre added to Midia successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "midia_genre inserted"
                                                },
                                                "id_midia": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "id_genre": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "midia": {
                                                    "$ref": "#components/schemas/midia"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Midia creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_insert"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/midias/{id_midia}/genres/{id_genre}": {
            "parameters": [
                {
                    "name": "id_midia",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "example": 1
                    },
                    "description": "Unique identifier of the Midia."
                },
                {
                    "name": "id_genre",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the Genre."
                }
            ],
            "put": {
                "tags": [
                    "Midias"
                ],
                "summary": "Update Genre from Midia",
                "description": "Update Genre from Midia by their IDs.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "main": {
                                        "type": "string",
                                        "example": "true",
                                        "enum": [
                                            null,
                                            "true",
                                            "false"
                                        ],
                                        "description": "Indicates if is the main Genre of the Midia."
                                    }
                                },
                                "required": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Genre from Midia updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "midia_genre updated"
                                                },
                                                "id_midia": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "id_genre": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "midia": {
                                                    "$ref": "#components/schemas/midia"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Genre from Midia update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_update"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Midias"
                ],
                "summary": "Removes Genre from Midia",
                "description": "Removes a specific Genre from Midia by their IDs.",
                "responses": {
                    "200": {
                        "description": "Genre removed from Midia successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "midia_genre deleted"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during deletion.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_delete"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "tags": [
                    "Sessions"
                ],
                "summary": "List Sessions",
                "description": "Returns a list of Sessions.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "start",
                                "end",
                                "user",
                                "midia",
                                "code",
                                "id",
                                "id_user",
                                "id_midia",
                                "created",
                                "updated"
                            ]
                        },
                        "description": "Order field(start if null)"
                    },
                    {
                        "name": "id_user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_user"
                    },
                    {
                        "name": "id_midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_midia"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by code"
                    },
                    {
                        "name": "code_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by code including value"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by User"
                    },
                    {
                        "name": "user_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by User including value"
                    },
                    {
                        "name": "midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Midia"
                    },
                    {
                        "name": "midia_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Midia including value"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "format": "yyyy-mm-dd"
                        },
                        "description": "filter by start or end iquals to value"
                    },
                    {
                        "name": "range_start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "format": "yyyy-mm-dd"
                        },
                        "description": "filter by start or end greater or iquals to value(requires range_end)"
                    },
                    {
                        "name": "range_end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "format": "yyyy-mm-dd"
                        },
                        "description": "filter by start or end lower or iquals to value(requires range_start)"
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring Comments from Session"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Sessions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/session"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Create a new Session",
                "description": "Creates a new Session with the provided details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_user": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from User of the Session."
                                    },
                                    "id_midia": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Midia of the Session."
                                    },
                                    "start": {
                                        "type": "string",
                                        "example": "2024-12-31 20:40:00",
                                        "format": "yyyy-mm-dd hh:ii:ss",
                                        "description": "Start timespamp of the Session.(current timestamp when null)"
                                    },
                                    "end": {
                                        "type": "string",
                                        "example": "2024-12-31 20:55:00",
                                        "format": "yyyy-mm-dd hh:ii:ss",
                                        "description": "End timespamp of the Session."
                                    }
                                },
                                "required": [
                                    "id_user",
                                    "id_midia"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "session inserted"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "session": {
                                                    "$ref": "#components/schemas/session"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_session"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Session creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_insert"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the Session."
                }
            ],
            "get": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Get Session details",
                "description": "Retrieve the details of a specific Session by its ID.",
                "responses": {
                    "200": {
                        "description": "Session details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/session"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Update Session",
                "description": "Update Session by their ID.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "start": {
                                        "type": "string",
                                        "example": "2024-12-31 20:40:00",
                                        "format": "yyyy-mm-dd hh:ii:ss",
                                        "description": "Start timespamp of the Session."
                                    },
                                    "end": {
                                        "type": "string",
                                        "example": "2024-12-31 20:55:00",
                                        "format": "yyyy-mm-dd hh:ii:ss",
                                        "description": "End timespamp of the Session."
                                    }
                                },
                                "required": [
                                    "start"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "session updated"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "session": {
                                                    "$ref": "#components/schemas/session"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_session"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Session update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_update"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Delete a Session",
                "description": "Deletes a specific Session by their ID.",
                "responses": {
                    "200": {
                        "description": "Session deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "session deleted"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during deletion.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_delete"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user_midia": {
            "get": {
                "tags": [
                    "User Midia"
                ],
                "summary": "List User Midia relations",
                "description": "Returns a list of User Midia relations.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "midia",
                                "user",
                                "completion",
                                "score",
                                "id",
                                "id_midia",
                                "id_user",
                                "id_completion",
                                "created",
                                "updated"
                            ]
                        },
                        "description": "Order field(midia if null)"
                    },
                    {
                        "name": "id_user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_user"
                    },
                    {
                        "name": "id_midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_midia"
                    },
                    {
                        "name": "id_completion",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_completion"
                    },
                    {
                        "name": "id_category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_category"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by User"
                    },
                    {
                        "name": "user_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by User including value"
                    },
                    {
                        "name": "midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Midia"
                    },
                    {
                        "name": "midia_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Midia including value"
                    },
                    {
                        "name": "score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null
                        },
                        "description": "filter by score"
                    },
                    {
                        "name": "score_lower",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null
                        },
                        "description": "filter by score lower than value"
                    },
                    {
                        "name": "score_higher",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null
                        },
                        "description": "filter by score higher than value"
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Bring User Comments from Midia"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of User Midia relations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/user_midia"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "post": {
                "tags": [
                    "User Midia"
                ],
                "summary": "Add Midia to User",
                "description": "Add a new Midia to User Session with the provided details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_user": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from User."
                                    },
                                    "id_midia": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Midia."
                                    },
                                    "id_completion": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Completion of the Midia from User."
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": 85,
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "Score of the Midia from User."
                                    },
                                    "completed": {
                                        "type": "string",
                                        "example": "2025-01-15",
                                        "format": "yyyy-mm-dd",
                                        "description": "Completed Date of the Midia from User."
                                    }
                                },
                                "required": [
                                    "id_user",
                                    "id_midia"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user_midia created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "user_midia inserted"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "user_midia": {
                                                    "$ref": "#components/schemas/user_midia"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Session creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_insert"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user_midia/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the User Midia."
                }
            ],
            "get": {
                "tags": [
                    "User Midia"
                ],
                "summary": "Get User Midia details",
                "description": "Retrieve the details of a specific User Midia relationship by its ID.",
                "responses": {
                    "200": {
                        "description": "User Midia details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/user_midia"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "put": {
                "tags": [
                    "User Midia"
                ],
                "summary": "Update User Midia",
                "description": "Update User Midia by their ID.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_completion": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Completion of the Midia from User."
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": 85,
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "Score of the Midia from User."
                                    },
                                    "completed": {
                                        "type": "string",
                                        "example": "2025-01-15",
                                        "format": "yyyy-mm-dd",
                                        "description": "Completed Date of the Midia from User."
                                    }
                                },
                                "required": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Midia updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "user_midia updated"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_midia": {
                                                    "$ref": "#components/schemas/user_midia"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during User Midia update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_update"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Midia"
                ],
                "summary": "Delete a User Midia",
                "description": "Deletes a specific User Midia by their ID.",
                "responses": {
                    "200": {
                        "description": "User Midia deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "user_midia deleted"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during deletion.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_delete"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "List Comments",
                "description": "Returns a list of Comments.",
                "parameters": [
                    {
                        "$ref": "#components/parameters/page"
                    },
                    {
                        "$ref": "#components/parameters/page_limit"
                    },
                    {
                        "$ref": "#components/parameters/order_direction"
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "enum": [
                                null,
                                "created",
                                "user",
                                "midia",
                                "session",
                                "text",
                                "id",
                                "id_user",
                                "id_midia",
                                "id_session",
                                "updated"
                            ]
                        },
                        "description": "Order field(created if null)"
                    },
                    {
                        "name": "id_user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_user"
                    },
                    {
                        "name": "id_midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_midia"
                    },
                    {
                        "name": "id_session",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": false
                        },
                        "description": "filter by id_session"
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by text"
                    },
                    {
                        "name": "text_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by text including value"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by User"
                    },
                    {
                        "name": "user_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by User including value"
                    },
                    {
                        "name": "midia",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Midia"
                    },
                    {
                        "name": "midia_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Midia including value"
                    },
                    {
                        "name": "session",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Session"
                    },
                    {
                        "name": "session_like",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        },
                        "description": "filter by Session including value"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "format": "yyyy-mm-dd"
                        },
                        "description": "filter by created or updated iquals to value"
                    },
                    {
                        "name": "range_start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "format": "yyyy-mm-dd"
                        },
                        "description": "filter by created or updated greater or iquals to value(requires range_end)"
                    },
                    {
                        "name": "range_end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "format": "yyyy-mm-dd"
                        },
                        "description": "filter by start or end lower or iquals to value(requires range_start)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#components/schemas/comment"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/responses/get_200_default"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new Comment",
                "description": "Creates a new Comment with the provided details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_user": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from User of the Comment."
                                    },
                                    "id_midia": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Midia of the Comment."
                                    },
                                    "id_session": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "Id from Session of the Comment."
                                    },
                                    "text": {
                                        "type": "string",
                                        "example": "Great Movie!",
                                        "description": "Text of the Comment."
                                    }
                                },
                                "required": [
                                    "id_user",
                                    "id_midia",
                                    "text"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "comment inserted"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "comment": {
                                                    "$ref": "#components/schemas/comment"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Comment creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_insert"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Unique identifier of the Comment."
                }
            ],
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get Comment details",
                "description": "Retrieve the details of a specific Comment by its ID.",
                "responses": {
                    "200": {
                        "description": "Comment details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update Comment",
                "description": "Update Comment by their ID.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "Great Movie!",
                                        "description": "Text of the Comment."
                                    }
                                },
                                "required": [
                                    "text"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "comment updated"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "comment": {
                                                    "$ref": "#components/schemas/comment"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during Comment update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_update"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a Comment",
                "description": "Deletes a specific Comment by their ID.",
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "comment deleted"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during deletion.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_delete"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "description": "Login providing Users's name and password.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe",
                                        "description": "Name from User."
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "abc123",
                                        "description": "Password from User."
                                    }
                                },
                                "required": [
                                    "password",
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "user logged"
                                                },
                                                "user": {
                                                    "$ref": "#components/schemas/user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 401
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "bad credentials"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/change_password": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Change Password",
                "description": "Changes Users password providing old password.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_user": {
                                        "type": "integer",
                                        "example": 2,
                                        "description": "Id from User."
                                    },
                                    "old_password": {
                                        "type": "string",
                                        "example": "abc123",
                                        "description": "Current Password from User.(not required when User has no Password)"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "abc456",
                                        "description": "New Password for the User."
                                    }
                                },
                                "required": [
                                    "id_user",
                                    "new_password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User's password updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "response_data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "password updated"
                                                },
                                                "user": {
                                                    "$ref": "#components/schemas/user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/400_default"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "417": {
                        "description": "Error occurred during User's Password update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/responses/417_update"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "user": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 3
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "status": {
                        "type": "string",
                        "example": "created",
                        "enum": [
                            "created",
                            "active",
                            "inactive",
                            "suspended",
                            "deleted"
                        ]
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "midias": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/midia"
                        }
                    },
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/session"
                        }
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/comment"
                        }
                    }
                }
            },
            "midia": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 3
                    },
                    "id_category": {
                        "type": "integer",
                        "example": 3
                    },
                    "id_main_midia": {
                        "type": "integer",
                        "example": null
                    },
                    "title": {
                        "type": "string",
                        "example": "The Matrix"
                    },
                    "category": {
                        "type": "string",
                        "example": "Movies"
                    },
                    "main_midia": {
                        "type": "string",
                        "example": null
                    },
                    "description": {
                        "type": "string",
                        "example": "Enter The Matrix"
                    },
                    "release_year": {
                        "type": "string",
                        "format": "yyyy",
                        "example": "1999"
                    },
                    "release_month": {
                        "type": "string",
                        "format": "mm",
                        "example": "12"
                    },
                    "release_day": {
                        "type": "string",
                        "format": "dd",
                        "example": "31"
                    },
                    "release": {
                        "type": "string",
                        "format": "yyyy | mm | dd | dd/mm/yyyy| mm/yyyy | dd/mm",
                        "example": "31/12/1999"
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/genre"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/user"
                        }
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/comment"
                        }
                    }
                }
            },
            "session": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 3
                    },
                    "id_user": {
                        "type": "integer",
                        "example": 2
                    },
                    "id_midia": {
                        "type": "integer",
                        "example": 1
                    },
                    "code": {
                        "type": "string",
                        "example": "f1yiyswe8"
                    },
                    "user": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "midia": {
                        "type": "string",
                        "example": "The Matrix"
                    },
                    "start": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 20:40:00"
                    },
                    "end": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 20:55:00"
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "start_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 20:40:00"
                    },
                    "end_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 20:55:00"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/comment"
                        }
                    }
                }
            },
            "comment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 3
                    },
                    "id_user": {
                        "type": "integer",
                        "example": 2
                    },
                    "id_midia": {
                        "type": "integer",
                        "example": 1
                    },
                    "id_session": {
                        "type": "integer",
                        "example": 1
                    },
                    "text": {
                        "type": "string",
                        "example": "Great Movie!"
                    },
                    "user": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "midia": {
                        "type": "string",
                        "example": "The Matrix"
                    },
                    "session": {
                        "type": "string",
                        "example": "kt8e9rgw4"
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    }
                }
            },
            "user_midia": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 3
                    },
                    "id_user": {
                        "type": "integer",
                        "example": 2
                    },
                    "id_midia": {
                        "type": "integer",
                        "example": 1
                    },
                    "id_completion": {
                        "type": "integer",
                        "example": 1
                    },
                    "user": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "midia": {
                        "type": "string",
                        "example": "The Matrix"
                    },
                    "completion": {
                        "type": "string",
                        "example": "watched"
                    },
                    "score": {
                        "type": "integer",
                        "example": 85
                    },
                    "completed": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "completed_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy",
                        "example": "31/12/2024"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/comment"
                        }
                    }
                }
            },
            "genre": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "id_category": {
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Action"
                    },
                    "category": {
                        "type": "string",
                        "example": "Movies"
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "midias": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/midia"
                        }
                    }
                }
            },
            "category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Movies"
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "midias": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/midia"
                        }
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/genre"
                        }
                    }
                }
            },
            "completion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Completed campaign mode"
                    },
                    "order": {
                        "type": "integer",
                        "example": 2
                    },
                    "created": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "updated": {
                        "type": "string",
                        "format": "yyyy-mm-dd hh:ii:ss",
                        "example": "2024-12-31 15:50:39"
                    },
                    "created_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    },
                    "updated_formated": {
                        "type": "string",
                        "format": "dd/mm/yyyy hh:ii:ss",
                        "example": "31/12/2024 15:50:39"
                    }
                }
            }
        },
        "parameters": {
            "page": {
                "name": "page",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": null
                },
                "description": "Page number for pagination"
            },
            "page_limit": {
                "name": "page_limit",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": null
                },
                "description": "Limit of itens on page"
            },
            "order_direction": {
                "name": "order_direction",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": null,
                    "enum": [
                        null,
                        "asc",
                        "desc"
                    ]
                },
                "description": "Order direction(asc if null)"
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Access token is missing or invalid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#components/responses/401_default"
                        }
                    }
                }
            },
            "get_200_default": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "integer",
                        "example": 1
                    },
                    "total": {
                        "type": "integer",
                        "example": 1
                    },
                    "page": {
                        "type": "integer",
                        "example": 1
                    },
                    "pages": {
                        "type": "integer",
                        "example": 1
                    },
                    "page_limit": {
                        "type": "integer",
                        "example": 10
                    }
                }
            },
            "400_default": {
                "type": "object",
                "properties": {
                    "response_code": {
                        "type": "integer",
                        "example": 400
                    },
                    "response_data": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "example": false
                            },
                            "code": {
                                "type": "integer",
                                "example": 400
                            },
                            "msg": {
                                "type": "string",
                                "example": "{field} is required|invalid"
                            }
                        }
                    }
                }
            },
            "400_user": {
                "type": "object",
                "properties": {
                    "response_code": {
                        "type": "integer",
                        "example": 400
                    },
                    "response_data": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "example": false
                            },
                            "code": {
                                "type": "integer",
                                "example": 400
                            },
                            "msg": {
                                "type": "string",
                                "example": "{field} required|invalid | name already registered"
                            }
                        }
                    }
                }
            },
            "400_session": {
                "type": "object",
                "properties": {
                    "response_code": {
                        "type": "integer",
                        "example": 400
                    },
                    "response_data": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "example": false
                            },
                            "code": {
                                "type": "integer",
                                "example": 400
                            },
                            "msg": {
                                "type": "string",
                                "example": "{field} required|invalid | start greater than end"
                            }
                        }
                    }
                }
            },
            "401_default": {
                "type": "object",
                "properties": {
                    "response_code": {
                        "type": "integer",
                        "example": 401
                    },
                    "response_data": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "example": false
                            },
                            "code": {
                                "type": "integer",
                                "example": 401
                            },
                            "msg": {
                                "type": "string",
                                "example": "Authorization is missing | Authorization token is missing | Authorization token expired"
                            }
                        }
                    }
                }
            },
            "417_insert": {
                "type": "object",
                "properties": {
                    "response_code": {
                        "type": "integer",
                        "example": 417
                    },
                    "response_data": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "example": false
                            },
                            "code": {
                                "type": "integer",
                                "example": 417
                            },
                            "msg": {
                                "type": "string",
                                "example": "error on insert"
                            }
                        }
                    }
                }
            },
            "417_update": {
                "type": "object",
                "properties": {
                    "response_code": {
                        "type": "integer",
                        "example": 417
                    },
                    "response_data": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "example": false
                            },
                            "code": {
                                "type": "integer",
                                "example": 417
                            },
                            "msg": {
                                "type": "string",
                                "example": "error on update"
                            }
                        }
                    }
                }
            },
            "417_delete": {
                "type": "object",
                "properties": {
                    "response_code": {
                        "type": "integer",
                        "example": 417
                    },
                    "response_data": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "example": false
                            },
                            "code": {
                                "type": "integer",
                                "example": 417
                            },
                            "msg": {
                                "type": "string",
                                "example": "error on delete"
                            }
                        }
                    }
                }
            }
        }
    }
}